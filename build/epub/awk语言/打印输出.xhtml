<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>5 打印输出</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="id1">
<h1>5 打印输出</h1>
<div class="section" id="print">
<h2>5.1 使用print语句</h2>
<p>使用print比较简单，每个打印的元素用逗号分割即可。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;{print $1,$2}&#39;</span> mail-list
Amelia <span class="m">555</span>-5553
Anthony <span class="m">555</span>-3412
Becky <span class="m">555</span>-7685
Bill <span class="m">555</span>-1675
Broderick <span class="m">555</span>-0542
Camilla <span class="m">555</span>-2912
Fabius <span class="m">555</span>-1234
Julie <span class="m">555</span>-6699
Martin <span class="m">555</span>-6480
Samuel <span class="m">555</span>-3430
Jean-Paul <span class="m">555</span>-2127
</pre></div>
</div>
</div>
<div class="section" id="id2">
<h2>5.2 输出分割符号</h2>
<p>默认的输出字段分割符号是空格， 默认的输出记录分隔符是回车。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;BEGIN{OFS=&quot;:&quot; ; ORS=&quot;\n\n&quot;}{print $1,$2}&#39;</span> mail-list
Amelia:555-5553

Anthony:555-3412

Becky:555-7685

Bill:555-1675

Broderick:555-0542

Camilla:555-2912

Fabius:555-1234

Julie:555-6699

Martin:555-6480

Samuel:555-3430

Jean-Paul:555-2127
</pre></div>
</div>
<p>控制输出分割符号，可以直接修改OFS(output field seprate),ORS(output field seprate)</p>
</div>
<div class="section" id="printf">
<h2>5.3 使用printf去输出</h2>
<p>print打印起来有些格式控制上不是太灵活的。 这个时候就需要printf闪亮登场了。</p>
<p>使用前有必要先给控制符号说下。 基本上和c语言的printf风格一样的。 学起来也是比较轻松的。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>%c      单个字符
%d      数字
%e      科学计数表示
%f      浮点数
%g      只能使用科学技术和通用技术表示法
%%      打印%
<span class="nv">$s</span>      字符串
-       左边对齐
+       正负数符号
<span class="m">0</span>       控制前导0
width   控制有效位数
.       控制浮点精度
</pre></div>
</div>
<p>使用样例</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ <span class="nb">echo</span> <span class="s2">&quot;15&quot;</span> <span class="p">|</span> awk <span class="s1">&#39;{printf &quot;%d\n&quot;,$0 }&#39;</span>
<span class="m">15</span>
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ <span class="nb">echo</span> <span class="s2">&quot;15&quot;</span> <span class="p">|</span> awk <span class="s1">&#39;{printf &quot;%3d\n&quot;,$0 }&#39;</span>
<span class="m">15</span>
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ <span class="nb">echo</span> <span class="s2">&quot;15&quot;</span> <span class="p">|</span> awk <span class="s1">&#39;{printf &quot;%+3d\n&quot;,$0 }&#39;</span>
+15
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ <span class="nb">echo</span> <span class="s2">&quot;15.1&quot;</span> <span class="p">|</span> awk <span class="s1">&#39;{printf &quot;%-3.2f\n&quot;,$0 }&#39;</span>
<span class="m">15</span>.10
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ <span class="nb">echo</span> <span class="s2">&quot;15.1&quot;</span> <span class="p">|</span> awk <span class="s1">&#39;{printf (&quot;%-3.2f\n&quot;,$0) }&#39;</span>
<span class="m">15</span>.10
</pre></div>
</div>
<p>上面的最后一个样例和上面的有所不同，使用了类似c的函数写法。 我个人是比较倾向与这个写法的，看着比较舒服。</p>
</div>
<div class="section" id="printprintf">
<h2>5.3 重定向print的结果和printf的结果</h2>
<p>一个文件中有多个属性列，但是我指向提取部分列数据， 且单独分割到一个文件中,可以考虑如下方法。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;{ print $2 &gt; &quot;phone-list&quot;</span>
<span class="s1">print $1 &gt; &quot;name-list&quot; }&#39;</span> mail-list
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ cat phone-list
<span class="m">555</span>-5553
<span class="m">555</span>-3412
<span class="m">555</span>-7685
<span class="m">555</span>-1675
<span class="m">555</span>-0542
<span class="m">555</span>-2912
<span class="m">555</span>-1234
<span class="m">555</span>-6699
<span class="m">555</span>-6480
<span class="m">555</span>-3430
<span class="m">555</span>-2127
<span class="o">[</span>root@centos74 test<span class="o">]</span>$ cat name-list
Amelia
Anthony
Becky
Bill
Broderick
Camilla
Fabius
Julie
Martin
Samuel
Jean-Paul
</pre></div>
</div>
<p>有时候我们使用awk提取完数据，需要借助bash去完成后续的操作。可以参考如下：</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;{print $1 &gt; &quot;name.unsorted&quot;</span>
<span class="s1">&gt; command = &quot;sort -r &gt;name.sorted&quot;</span>
<span class="s1">&gt; print $1 | command }&#39;</span> mail-list

<span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;{print $1 &gt; &quot;name.unsorted&quot;</span>
<span class="s1">&gt; print $1 | command }&#39;</span> mail-list <span class="p">|</span>  sort -r &gt;name.sorted
</pre></div>
</div>
<p>第一种方法用一个变量去存储要重定向的命令。将结果管道给重定向的命令即可。第二种就是看起来相对更好理解一些。 我习惯第二种方法。</p>
</div>
<div class="section" id="id3">
<h2>5.4 指定print的输出</h2>
<p>我们使用print,printf的时候是可以指定输出位置的， 默认是标准输出的。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">[</span>root@centos74 test<span class="o">]</span>$ awk <span class="s1">&#39;BEGIN{prinf &quot;aaa&quot; &gt; &quot;a.txt&quot;}&#39;</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>